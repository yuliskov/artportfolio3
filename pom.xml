<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>openshift</groupId>
    <artifactId>artportfolio</artifactId>
    <!-- determine what goals to bind to a particular phase -->
    <packaging>war</packaging>
    <version>2.0</version>
    <name>Art Portfolio</name>
    <!-- check actual versions: http://mvnrepository.com/artifact/<groupId> -->
    <properties>
        <!-- implicit -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
        <!-- plugin versions -->
        <maven-war-plugin>2.4</maven-war-plugin>
        <tomcat7-maven-plugin>2.2</tomcat7-maven-plugin>
        <yuicompressor-maven-plugin>1.3.3</yuicompressor-maven-plugin>
        <minify-maven-plugin>1.7.2</minify-maven-plugin>
        <!-- package versions -->
        <jstl>1.2</jstl>
        <jsp-api>2.2</jsp-api>
        <commons-fileupload>1.3</commons-fileupload>
        <commons-io>2.4</commons-io>
        <json>20131018</json>
        <spring>4.1.6.RELEASE</spring>
        <spring-data-jpa>1.8.0.RELEASE</spring-data-jpa>
        <spring-security>4.0.0.RELEASE</spring-security>
        <spring-data-commons>1.10.0.RELEASE</spring-data-commons>
        <hibernate-entitymanager>4.2.18.Final</hibernate-entitymanager>
        <hibernate-jpa-2.0-api>1.0.1.Final</hibernate-jpa-2.0-api>
        <hibernate-jpa-2.1-api>1.0.0.Draft-16</hibernate-jpa-2.1-api>
        <hsqldb>2.3.2</hsqldb>
        <jackson>2.10.3</jackson>
        <junit>4.9</junit>
        <log4j>1.2.17</log4j>
        <slf4j>1.7.5</slf4j>
        <sqlite-jdbc>3.7.2</sqlite-jdbc>
        <mysql-connector-java>5.1.28</mysql-connector-java>
        <postgresql>9.2-1002-jdbc4</postgresql>
        <spring-data-rest-core>2.3.0.RELEASE</spring-data-rest-core>
        <thymeleaf-spring4>2.1.2.RELEASE</thymeleaf-spring4>
        <nekohtml>1.9.13</nekohtml>
        <javax.servlet-api>3.0.1</javax.servlet-api>
    </properties>
    <dependencies>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet-api}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.nekohtml</groupId>
            <artifactId>nekohtml</artifactId>
            <version>${nekohtml}</version>
        </dependency>
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf-spring4</artifactId>
            <version>${thymeleaf-spring4}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-rest-core</artifactId>
            <version>${spring-data-rest-core}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>${jsp-api}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
            <version>${jstl}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io}</version>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${commons-fileupload}</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${json}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
            <version>${spring-data-jpa}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-commons</artifactId>
            <version>${spring-data-commons}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring-security}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring-security}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring-security}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.0-api</artifactId>
            <version>${hibernate-jpa-2.0-api}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate-entitymanager}</version>
        </dependency>
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>${hsqldb}</version>
        </dependency>
        <!-- MySQL JDBC driver -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector-java}</version>
        </dependency>
        <!-- PostgreSQL JDBC driver -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson}</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j}</version>
        </dependency>
        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>${sqlite-jdbc}</version>
        </dependency>
        <dependency>
            <groupId>org.imgscalr</groupId>
            <artifactId>imgscalr-lib</artifactId>
            <version>4.2</version>
        </dependency>
    </dependencies>
    <build>
        <finalName>${project.artifactId}</finalName>
		<plugins>

		</plugins>
    </build>
    <profiles>
        <profile>
            <id>dev</id>
            <dependencies>
                <!-- to disable unnecessary logging on server move log4j artifact here -->
            </dependencies>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <finalName>${project.artifactId}</finalName>
                <plugins>
                    <plugin>
                        <groupId>org.apache.tomcat.maven</groupId>
                        <artifactId>tomcat7-maven-plugin</artifactId>
                        <version>${tomcat7-maven-plugin}</version>
                        <configuration>
                            <!-- path to static files, default is ${basedir}/src/main/webapp -->
                            <!-- if you are using minimizer change this to compiler output directory -->
                            <systemProperties>
                                <!-- put your properties here -->
                                <systemProperty>
                                    <name>spring.profiles.active</name>
                                    <value>dev</value>
                                </systemProperty>
                            </systemProperties>
                            <server>tomcat-development-server</server>
                            <path>/</path>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
            <!-- Use this profile for any OpenShift specific customization your app will need. -->
            <!-- By default that is to put the resulting archive into the 'webapps' folder. -->
            <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
            <id>openshift</id>
            <build>
                <finalName>${project.artifactId}</finalName>
                <plugins>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${maven-war-plugin}</version>
                        <configuration>
                            <warName>ROOT</warName>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>com.samaxes.maven</groupId>
                        <artifactId>minify-maven-plugin</artifactId>
                        <version>${minify-maven-plugin}</version>
                        <executions>
                            <execution>
                                <id>default-minify</id>
                                <!-- run on package phase so development builds won't be affected -->
                                <phase>prepare-package</phase>
                                <configuration>
                                    <webappSourceDir>src/main/resources</webappSourceDir>
                                    <webappTargetDir>target/classes</webappTargetDir>
                                    <skipMerge>true</skipMerge>
                                    <nosuffix>true</nosuffix>
                                    <cssSourceDir>static</cssSourceDir>
                                    <cssSourceIncludes>
                                        <cssSourceInclude>**/*.css</cssSourceInclude>
                                    </cssSourceIncludes>
                                    <cssSourceExcludes>
                                        <cssSourceExclude>**/*.min.css</cssSourceExclude>
                                        <cssSourceExclude>**/*-min.css</cssSourceExclude>
                                    </cssSourceExcludes>
                                    <jsSourceDir>static</jsSourceDir>
                                    <jsSourceIncludes>
                                        <jsSourceInclude>**/*.js</jsSourceInclude>
                                    </jsSourceIncludes>
                                    <jsSourceExcludes>
                                        <jsSourceExclude>**/*.min.js</jsSourceExclude>
                                        <jsSourceExclude>**/*-min.js</jsSourceExclude>
                                        <jsSourceExclude>**/*.pack.js</jsSourceExclude>
                                    </jsSourceExcludes>
                                </configuration>
                                <goals>
                                    <goal>minify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
